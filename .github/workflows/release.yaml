name: Build and Release Tahini Binaries

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          version: 'latest'
          java-version: '21'

      - name: Build jar with Gradle
        run: |
          cd tahini
          ./gradlew build

      - name: Compile native image
        run: |
          cd tahini
          native-image -jar app/build/libs/app.jar tahini

      - name: Rename binary for unique names on Macos and Linux
        if: matrix.os != 'windows-latest'
        run: |
          cd tahini
          if [[ "${{ matrix.os }}" == "ubuntu-latest" ]]; then
            mv tahini tahini-linux
          elif [[ "${{ matrix.os }}" == "macos-latest" ]]; then
            mv tahini tahini-macos
          fi

      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: tahini-${{ matrix.os }}
          path: tahini

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all binaries
        uses: actions/download-artifact@v4
        with:
          path: .

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: ${{ contains(github.ref, 'beta') }}
          files: |
            tahini-ubuntu-latest/tahini-linux
            tahini-macos-latest/tahini-macos
            tahini-windows-latest/tahini.exe
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
